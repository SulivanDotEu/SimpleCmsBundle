{% extends  'WalvaCrudAdminBundle:Crud:new.html.twig' %}

{% block body -%}
    {% block crud_top_button %}
        <div style="padding-bottom: 44px;">
            <div class="pull-left" style="padding-bottom: 10px;">
                <a href="{{ path(routeIndex) }}" class="btn btn-default">
                    <span class="glyphicon glyphicon-chevron-left"></span>
                    Back to the list
                </a>
            </div>

        </div>
    {% endblock %}


    <h1>LanguageStrategy creation</h1>

    {{ form(form) }}

        <ul class="record_actions">



            {# On charge la bibliothèque jQuery. Ici, je la prends depuis le site jquery.com,
       mais si vous l'avez en local, changez simplement l'adresse. #}
            <script src="http://code.jquery.com/jquery-1.8.2.min.js"></script>

            {# Voici le script en question : #}
            <script type="text/javascript">
                $(document).ready(function () {
                    // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
                    var $container = $('div#walva_simplecmsbundle_languagestrategy_delivererRelations');

                    // On ajoute un lien pour ajouter une nouvelle catégorie
                    var $lienAjout = $('<a href="#" id="ajout_categorie" class="btn btn-default"><span class="glyphicon glyphicon-plus"></span> Ajouter une entrée</a>');
                    $container.append($lienAjout);

                    // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
                    $lienAjout.click(function (e) {
                        ajouterCategorie($container);
                        e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                        return false;
                    });

                    // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
                    var index = $container.find(':input').length;

                    // On ajoute un premier champ directement s'il n'en existe pas déjà un (cas d'un nouvel article par exemple).
                    if (index == 0) {
                        ajouterCategorie($container);
                    } else {
                        // Pour chaque catégorie déjà existante, on ajoute un lien de suppression
                        $container.children('div').each(function () {
                            ajouterLienSuppression($(this));
                        });
                    }

                    // La fonction qui ajoute un formulaire Categorie
                    function ajouterCategorie($container) {
                        // Dans le contenu de l'attribut « data-prototype », on remplace :
                        // - le texte "__name__label__" qu'il contient par le label du champ
                        // - le texte "__name__" qu'il contient par le numéro du champ
                        var $prototype = $($container.attr('data-prototype').replace(/__name__label__/g, 'Entrée n°' + (index + 1))
                                .replace(/__name__/g, index));

                        // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
                        ajouterLienSuppression($prototype);

                        // On ajoute le prototype modifié à la fin de la balise <div>
                        $container.append($prototype);

                        // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
                        index++;
                    }

                    // La fonction qui ajoute un lien de suppression d'une catégorie
                    function ajouterLienSuppression($prototype) {
                        // Création du lien
                        $lienSuppression = $('<a href="#" class="btn btn-danger">Supprimer</a>');

                        // Ajout du lien
                        $prototype.append($lienSuppression);

                        // Ajout du listener sur le clic du lien
                        $lienSuppression.click(function (e) {
                            $prototype.remove();
                            e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                            return false;
                        });
                    }
                });
            </script>
{% endblock %}
